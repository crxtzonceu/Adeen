// Select elements
const body = document.body;
const message = document.getElementById("message");
const counter = document.getElementById("counter");
const heart = document.getElementById("heart");
const heartContainer = document.getElementById("heart-container");

// Create the final message inside the heart
const finalMessage = document.createElement("p");
finalMessage.id = "final-message";
finalMessage.innerHTML = "Happy Heart's Day!!<br>🐱❤️🌹💐<br> Adeen✨!!";

heartContainer.appendChild(finalMessage);

// Ensure floating hearts container exists
let floatingContainer = document.getElementById("floating-container");
if (!floatingContainer) {
    floatingContainer = document.createElement("div");
    floatingContainer.id = "floating-container";
    document.body.appendChild(floatingContainer);
}

let tapCount = 0; // Initialize tap count

// Listen for taps anywhere on the page
body.addEventListener("pointerdown", () => {
    tapCount++; // Increase tap count

    if (tapCount === 1) {
        message.style.display = "none"; // hide message
        counter.style.display = "block"; // Show counter
        heartContainer.style.opacity = 1; // Make heart appear
        heart.style.transform = "scale(1)"; // Start at normal size
    }

    counter.textContent = tapCount; // Update counter

    // Limit the heart growth so it doesn't get too big
    let scaleValue = Math.min(1 + tapCount * 0.08, 1.6); // Increase size smoothly
    heart.style.transform = `scale(${scaleValue})`;

    // Gradual fill of the heart with a soft pink to reddish-pink
    let fillColor;
    if (tapCount <= 5) {
        fillColor = "rgb(255, 230, 235)"; // Soft pastel pink
    } else if (tapCount <= 10) {
        fillColor = "rgb(255, 160, 180)"; // Romantic pink
    } else {
        fillColor = "rgb(255, 100, 120)"; // Final reddish-pink
    }
    heart.style.fill = fillColor;

    // Background color transition
    let bgColor;
    if (tapCount <= 5) {
        bgColor = `rgb(255, 240, 245)`; // Soft pinkish-white
    } else if (tapCount <= 10) {
        let transitionPink = 245 - (tapCount - 5) * 30; // Gradually deepen pink
        bgColor = `rgb(255, ${transitionPink}, 200)`;
    } else {
        bgColor = "rgb(255, 80, 110)"; // Final reddish-pink
    }

    body.style.backgroundColor = bgColor;

    updateHeartStroke(); // Update heart outline color

    // Stop color change after 14 taps
    if (tapCount >= 14) {
        bgColor = "rgb(255, 80, 110)"; // Final color: soft red
        heart.style.fill = "rgb(255, 80, 110)"; // Stop changing fill
        message.style.display = "none"; // Hide message
        counter.style.display = "none"; // Hide counter
        finalMessage.style.opacity = 1; // Show final message inside heart
        createFloatingHearts(); // Add floating heart effect
    }

    body.style.backgroundColor = bgColor;
});

// Function to update heart outline color
function updateHeartStroke() {
    let strokeColor;
    if (tapCount <= 5) {
        strokeColor = "black";
    } else if (tapCount <= 10) {
        strokeColor = "pink";
    } else {
        strokeColor = "yellow";
    }
    heart.setAttribute("stroke", strokeColor); // Ensure stroke is solid
}

let hasStartedFloating = false; // Prevent multiple intervals

// Function to create floating hearts continuously after 14 taps
function createFloatingHearts() {
    if (hasStartedFloating) return; // Stop if already started
    hasStartedFloating = true; // Mark as started

    setInterval(() => {
        const floatingHeart = document.createElement("div");
        floatingHeart.classList.add("floating");

        // Randomize position
        floatingHeart.style.left = Math.random() * 100 + "vw";
        floatingHeart.style.top = "100vh"; // Start from the bottom

        // Randomize size
        let size = Math.random() * 30 + 10 + "px"; // Between 10px - 40px
        floatingHeart.style.fontSize = size;

        // Add ❤️ emoji instead of a circle
        floatingHeart.innerHTML = "❤️";

        floatingContainer.appendChild(floatingHeart);

        // Remove heart after it floats away
        setTimeout(() => {
            floatingHeart.remove();
        }, 4000);
    }, 300); // A new heart appears every 300ms
}





// // Select elements
// const body = document.body;
// const message = document.getElementById("message");
// const counter = document.getElementById("counter");
// const heart = document.getElementById("heart");
// const heartContainer = document.getElementById("heart-container");

// // Create the final message inside the heart
// const finalMessage = document.createElement("p");
// finalMessage.id = "final-message";
// finalMessage.innerHTML = "Happy Heart's Day!!<br>🐱💛🌹💐!!!"; // Split into 2 lines
// heartContainer.appendChild(finalMessage);

// let tapCount = 0; // Initialize tap count

// // Listen for taps anywhere on the page
// body.addEventListener("click", () => {
//     tapCount++; // Increase tap count

//     if (tapCount === 1) {
//         message.style.display = "none"; // Hide "Tap Fast Saya!"
//         counter.style.display = "block"; // Show counter
//         heartContainer.style.opacity = 1; // Make heart appear
//         heart.style.transform = "scale(1)"; // Start at normal size
//     }

//     counter.textContent = tapCount; // Update counter

//     // Limit the heart growth so it doesn't get too big
//     let scaleValue = Math.min(1 + tapCount * 0.08, 1.7); // Increase size smoothly
//     heart.style.transform = `scale(${scaleValue})`;

//     // Gradual fill of the heart with a reddish-pink color
//     let fillColor;
//     if (tapCount <= 5) {
//         fillColor = "lightyellow"; // Start light yellow
//     } else if (tapCount <= 10) {
//         fillColor = "rgb(255, 200, 150)"; // More pinkish yellow
//     } else {
//         fillColor = "rgb(255, 120, 130)"; // Softer red, not too strong
//     }
//     heart.style.fill = fillColor;

//     // Background color transition
//     let bgColor;
//     if (tapCount <= 5) {
//         bgColor = `rgb(255, 255, ${255 - tapCount * 30})`; // White to yellow
//     } else if (tapCount <= 10) {
//         let pinkValue = 255 - (tapCount - 5) * 25;
//         bgColor = `rgb(255, ${pinkValue}, 150)`; // Yellow to pink
//     } else {
//         let redValue = 255;
//         let softRed = 120 - (tapCount - 10) * 5;
//         bgColor = `rgb(${redValue}, ${softRed}, 150)`; // Pink to reddish
//     }

//     updateHeartStroke(); // Update heart outline color

//     // Stop color change after 14 taps
//     if (tapCount >= 14) {
//         bgColor = "rgb(255, 80, 110)"; // Final color: soft red
//         heart.style.fill = "rgb(255, 80, 110)"; // Stop changing fill
//         message.style.display = "none"; // Hide message
//         counter.style.display = "none"; // Hide counter
//         finalMessage.style.opacity = 1; // Show final message inside heart
//     }

//     body.style.backgroundColor = bgColor;
// });

// // Function to update heart outline color
// function updateHeartStroke() {
//     let strokeColor;
//     if (tapCount <= 5) {
//         strokeColor = "black";
//     } else if (tapCount <= 10) {
//         strokeColor = "pink";
//     } else {
//         strokeColor = "yellow";
//     }
//     heart.setAttribute("stroke", strokeColor); // Ensure stroke is solid
// }




// 




// const _0x18deb9=_0x34b3;(function(_0x35d2dd,_0x5e77f3){const _0x17efbd=_0x34b3,_0x3d372f=_0x35d2dd();while(!![]){try{const _0x66022f=-parseInt(_0x17efbd(0x1c6))/0x1*(-parseInt(_0x17efbd(0x1a0))/0x2)+-parseInt(_0x17efbd(0x1a8))/0x3*(parseInt(_0x17efbd(0x1a7))/0x4)+-parseInt(_0x17efbd(0x1bf))/0x5+-parseInt(_0x17efbd(0x1c5))/0x6*(-parseInt(_0x17efbd(0x1b7))/0x7)+-parseInt(_0x17efbd(0x1ab))/0x8*(parseInt(_0x17efbd(0x1b3))/0x9)+parseInt(_0x17efbd(0x1b0))/0xa*(-parseInt(_0x17efbd(0x1a9))/0xb)+parseInt(_0x17efbd(0x19b))/0xc;if(_0x66022f===_0x5e77f3)break;else _0x3d372f['push'](_0x3d372f['shift']());}catch(_0x54d10b){_0x3d372f['push'](_0x3d372f['shift']());}}}(_0x1c19,0x6e8e8));const body=document[_0x18deb9(0x1ae)],message=document[_0x18deb9(0x1bc)](_0x18deb9(0x19d)),counter=document[_0x18deb9(0x1bc)](_0x18deb9(0x1b9)),heart=document[_0x18deb9(0x1bc)]('heart'),heartContainer=document[_0x18deb9(0x1bc)]('heart-container'),finalMessage=document[_0x18deb9(0x1b8)]('p');finalMessage['id']=_0x18deb9(0x1ca),finalMessage['innerHTML']='Happy\x20Heart\x27s\x20Day!!<br>🐱💛🌹💐<br>\x20Saya!!',heartContainer[_0x18deb9(0x1a6)](finalMessage);function _0x1c19(){const _0x3d6e7e=['3jrkrGU','3305225WHHgNw','random','14096MEjneo','add','display','body','fill','10WkizYk','fontSize','scale(','3636XPvgfh','min','100vh','div','21ZypuOJ','createElement','counter','black','style','getElementById','top','left','3728175RBgPVF','setAttribute','innerHTML','rgb(255,\x2080,\x20110)','rgb(255,\x20120,\x20130)',',\x20150)','1714476DjiIXD','1GKfzVU','transform','textContent','opacity','final-message','lightyellow','pointerdown','rgb(255,\x20255,\x20','6898356jNwlBx','none','message','backgroundColor','remove','1665182zbdduI','floating-container','yellow','block','rgb(255,\x20','addEventListener','appendChild','215576ZOsfsN'];_0x1c19=function(){return _0x3d6e7e;};return _0x1c19();}let floatingContainer=document['getElementById'](_0x18deb9(0x1a1));!floatingContainer&&(floatingContainer=document[_0x18deb9(0x1b8)](_0x18deb9(0x1b6)),floatingContainer['id']=_0x18deb9(0x1a1),document[_0x18deb9(0x1ae)][_0x18deb9(0x1a6)](floatingContainer));let tapCount=0x0;body[_0x18deb9(0x1a5)](_0x18deb9(0x1cc),()=>{const _0x24ebf0=_0x18deb9;tapCount++;tapCount===0x1&&(message['style'][_0x24ebf0(0x1ad)]='none',counter['style'][_0x24ebf0(0x1ad)]=_0x24ebf0(0x1a3),heartContainer[_0x24ebf0(0x1bb)][_0x24ebf0(0x1c9)]=0x1,heart[_0x24ebf0(0x1bb)][_0x24ebf0(0x1c7)]='scale(1)');counter[_0x24ebf0(0x1c8)]=tapCount;let _0x5c3253=Math[_0x24ebf0(0x1b4)](0x1+tapCount*0.08,1.7);heart[_0x24ebf0(0x1bb)][_0x24ebf0(0x1c7)]=_0x24ebf0(0x1b2)+_0x5c3253+')';let _0x42c00e;if(tapCount<=0x5)_0x42c00e=_0x24ebf0(0x1cb);else tapCount<=0xa?_0x42c00e='rgb(255,\x20200,\x20150)':_0x42c00e=_0x24ebf0(0x1c3);heart['style'][_0x24ebf0(0x1af)]=_0x42c00e;let _0x54d7af;if(tapCount<=0x5)_0x54d7af=_0x24ebf0(0x19a)+(0xff-tapCount*0x1e)+')';else{if(tapCount<=0xa){let _0xaf3a9c=0xff-(tapCount-0x5)*0x19;_0x54d7af=_0x24ebf0(0x1a4)+_0xaf3a9c+_0x24ebf0(0x1c4);}else{let _0x208bfb=0xff,_0x3a3e17=0x78-(tapCount-0xa)*0x5;_0x54d7af='rgb('+_0x208bfb+',\x20'+_0x3a3e17+_0x24ebf0(0x1c4);}}updateHeartStroke(),tapCount>=0xe&&(_0x54d7af=_0x24ebf0(0x1c2),heart[_0x24ebf0(0x1bb)]['fill']='rgb(255,\x2080,\x20110)',message['style'][_0x24ebf0(0x1ad)]=_0x24ebf0(0x19c),counter[_0x24ebf0(0x1bb)][_0x24ebf0(0x1ad)]=_0x24ebf0(0x19c),finalMessage[_0x24ebf0(0x1bb)][_0x24ebf0(0x1c9)]=0x1,createFloatingHearts()),body[_0x24ebf0(0x1bb)][_0x24ebf0(0x19e)]=_0x54d7af;});function updateHeartStroke(){const _0x4f62c8=_0x18deb9;let _0x2cc238;if(tapCount<=0x5)_0x2cc238=_0x4f62c8(0x1ba);else tapCount<=0xa?_0x2cc238='pink':_0x2cc238=_0x4f62c8(0x1a2);heart[_0x4f62c8(0x1c0)]('stroke',_0x2cc238);}let hasStartedFloating=![];function _0x34b3(_0x179173,_0xa72cd9){const _0x1c19b5=_0x1c19();return _0x34b3=function(_0x34b33a,_0x1ce0ed){_0x34b33a=_0x34b33a-0x19a;let _0x2a0e6c=_0x1c19b5[_0x34b33a];return _0x2a0e6c;},_0x34b3(_0x179173,_0xa72cd9);}function createFloatingHearts(){if(hasStartedFloating)return;hasStartedFloating=!![],setInterval(()=>{const _0xa899af=_0x34b3,_0x1a4779=document['createElement'](_0xa899af(0x1b6));_0x1a4779['classList'][_0xa899af(0x1ac)]('floating'),_0x1a4779[_0xa899af(0x1bb)][_0xa899af(0x1be)]=Math[_0xa899af(0x1aa)]()*0x64+'vw',_0x1a4779[_0xa899af(0x1bb)][_0xa899af(0x1bd)]=_0xa899af(0x1b5);let _0x276d80=Math[_0xa899af(0x1aa)]()*0x1e+0xa+'px';_0x1a4779['style'][_0xa899af(0x1b1)]=_0x276d80,_0x1a4779[_0xa899af(0x1c1)]='❤️',floatingContainer[_0xa899af(0x1a6)](_0x1a4779),setTimeout(()=>{const _0x1c79cf=_0xa899af;_0x1a4779[_0x1c79cf(0x19f)]();},0xfa0);},0x12c);}
